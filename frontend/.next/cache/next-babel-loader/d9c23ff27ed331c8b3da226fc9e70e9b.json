{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\navar\\\\Desktop\\\\sick-fits\\\\frontend\\\\components\\\\Products.js\";\nimport { useQuery } from '@apollo/client';\nimport gql from \"graphql-tag\";\nimport styled from 'styled-components';\nimport { perPage } from '../config';\nimport Product from './Product';\nexport const ALL_PRODUCTS_QUERY = gql`\n    query ALL_PRODUCTS_QUERY ($skip: Int = 0, $first: Int){\n        allProducts(first: $first, skip: $skip ) {\n            id \n            name\n            price\n            description\n            photo {\n                id\n                image {\n                    publicUrlTransformed\n                }\n            }\n        }\n    }\n`;\nconst ProductsListStyles = styled.div.withConfig({\n  displayName: \"Products__ProductsListStyles\",\n  componentId: \"sc-1uv5x8m-0\"\n})([\"display:grid;grid-template-columns:1fr 1fr;grid-gap:60px;\"]);\nexport default function Products({\n  page\n}) {\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(ALL_PRODUCTS_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage\n    }\n  });\n  console.log(data, error, loading);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 24\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 22\n  }, this);\n  console;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ProductsListStyles, {\n      children: data.allProducts.map(product => /*#__PURE__*/_jsxDEV(Product, {\n        product: product\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/navar/Desktop/sick-fits/frontend/components/Products.js"],"names":["useQuery","gql","styled","perPage","Product","ALL_PRODUCTS_QUERY","ProductsListStyles","div","Products","page","data","error","loading","variables","skip","first","console","log","message","allProducts","map","product","id"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAGA,OAAO,MAAMC,kBAAkB,GAAGJ,GAAI;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfO;AAiBP,MAAMK,kBAAkB,GAAGJ,MAAM,CAACK,GAAV;AAAA;AAAA;AAAA,iEAAxB;AAOA,eAAe,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAA4B;AACvC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA2BZ,QAAQ,CAACK,kBAAD,EAAqB;AAC1DQ,IAAAA,SAAS,EAAE;AACPC,MAAAA,IAAI,EAAEL,IAAI,GAAGN,OAAP,GAAiBA,OADhB;AAEPY,MAAAA,KAAK,EAAEZ;AAFA;AAD+C,GAArB,CAAzC;AAMAa,EAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ,EAAkBC,KAAlB,EAAyBC,OAAzB;AACA,MAAGA,OAAH,EAAY,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACZ,MAAGD,KAAH,EAAU,oBAAO;AAAA,0BAAWA,KAAK,CAACO,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACVF,EAAAA,OAAO;AACP,sBACI;AAAA,2BACI,QAAC,kBAAD;AAAA,gBACKN,IAAI,CAACS,WAAL,CAAiBC,GAAjB,CAAsBC,OAAD,iBAClB,QAAC,OAAD;AAA0B,QAAA,OAAO,EAAEA;AAAnC,SAAcA,OAAO,CAACC,EAAtB;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AASH","sourcesContent":["import { useQuery } from '@apollo/client';\r\nimport gql from \"graphql-tag\";\r\nimport styled from 'styled-components';\r\nimport { perPage } from '../config';\r\nimport Product from './Product';\r\n\r\n\r\nexport const ALL_PRODUCTS_QUERY = gql`\r\n    query ALL_PRODUCTS_QUERY ($skip: Int = 0, $first: Int){\r\n        allProducts(first: $first, skip: $skip ) {\r\n            id \r\n            name\r\n            price\r\n            description\r\n            photo {\r\n                id\r\n                image {\r\n                    publicUrlTransformed\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst ProductsListStyles = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-gap: 60px; \r\n`;\r\n\r\n\r\nexport default function Products({ page }) {\r\n    const { data, error, loading } = useQuery(ALL_PRODUCTS_QUERY, {\r\n        variables: {\r\n            skip: page * perPage - perPage,\r\n            first: perPage,\r\n        },\r\n    });\r\n    console.log(data, error, loading);\r\n    if(loading) return <p>Loading...</p>;\r\n    if(error) return <p>Error: {error.message}</p>;\r\n    console\r\n    return (\r\n        <div>\r\n            <ProductsListStyles>\r\n                {data.allProducts.map((product) => (\r\n                    <Product key={product.id} product={product} />\r\n                ))}\r\n            </ProductsListStyles>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}